{
    "1006": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1013": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1015": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1016": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1020": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1028": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1040": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1042": {
        "RunsComparator: compare Method": 1,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1044": {
        "RunsComparator: compare Method": 1,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1047": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 1,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1048": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1050": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1051": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1052": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 1,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1053": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1061": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1062": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1064": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1070": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1073": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1077": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1078": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1084": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1095": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 1,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1101": {
        "RunsComparator: compare Method": 1,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1106": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1117": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1118": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1120": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1121": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1124": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1125": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1129": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1135": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1136": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1137": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1142": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1143": {
        "RunsComparator: compare Method": 1,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1148": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1154": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1156": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1163": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1168": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1172": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1176": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1177": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1181": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1192": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1199": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1200": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1213": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1219": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1221": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1223": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1225": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1227": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1231": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1236": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 1,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1237": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1238": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1242": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1245": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1251": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1252": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1253": {
        "RunsComparator: compare Method": 1,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1255": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 1,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 1,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1261": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1265": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1266": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1271": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1272": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1277": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1281": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 1,
            "Step 3: Ignore the first line since it contains the column names": 1,
            "Step 4: Read each line one by one until reaching the end of the file": 1,
            "Step 5: Split the line into different pieces of information": 1,
            "Step 6: Create a new player using this information": 1,
            "Step 7: Add the new player to the list": 1,
            "Step 8: Close the file after reading all data": 1,
            "Step 9: Return the complete list of players": 1
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 1,
            "Step 2: Write the column names as the first line of the file": 1,
            "Step 3: For each player in the list, convert their details to the desired format": 1,
            "Step 4: Write each player's information to the file": 1
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 1,
            "Step 3: If it matches, update the player's runs with the new value": 1,
            "Step 4: Similarly, update the player's wickets with the new value": 1,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 1
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 1,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1286": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1293": {
        "RunsComparator: compare Method": 2,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 1,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 1,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 2,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 1,
            "Step 4: Compute and return the average runs scored": 1
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the players list": 1,
            "Step 3: If the player's team matches the given name, add them to the list": 2,
            "Step 4: Return the list containing all matching players": 1
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 1,
            "Step 2: Go through each player in the list": 1,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 1
        }
    },
    "1296": {
        "RunsComparator: compare Method": 1,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1298": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1299": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1301": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    },
    "1305": {
        "RunsComparator: compare Method": 0,
        "CricketDataHandler: readPlayersFromFile Method": {
            "Step 1: Create an empty list to store player details": 0,
            "Step 2: Open the specified file for reading data": 0,
            "Step 3: Ignore the first line since it contains the column names": 0,
            "Step 4: Read each line one by one until reaching the end of the file": 0,
            "Step 5: Split the line into different pieces of information": 0,
            "Step 6: Create a new player using this information": 0,
            "Step 7: Add the new player to the list": 0,
            "Step 8: Close the file after reading all data": 0,
            "Step 9: Return the complete list of players": 0
        },
        "CricketDataHandler: writePlayersToFile Method": {
            "Step 1: Prepare to write data into the specified file": 0,
            "Step 2: Write the column names as the first line of the file": 0,
            "Step 3: For each player in the list, convert their details to the desired format": 0,
            "Step 4: Write each player's information to the file": 0
        },
        "CricketDataHandler: updatePlayerStats Method": {
            "Step 1: Go through each player in the list": 0,
            "Step 2: Check if the current player's name matches the given name": 0,
            "Step 3: If it matches, update the player's runs with the new value": 0,
            "Step 4: Similarly, update the player's wickets with the new value": 0,
            "Step 5: If no player matches the given name, throw an IllegalArgumentException": 0
        },
        "CricketDataHandler: calculateTeamAverageRuns Method": {
            "Step 1: Filter players belonging to the specified team": 0,
            "Step 2: If no players for this team exist, throw an IllegalArgumentException exception": 0,
            "Step 3: Calculate the total runs scored by all players from this team": 0,
            "Step 4: Compute and return the average runs scored": 0
        },
        "TeamFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the players list": 0,
            "Step 3: If the player's team matches the given name, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        },
        "AllRounderStatsFilter: filter Method": {
            "Step 1: Create an empty list for players matching the criteria": 0,
            "Step 2: Go through each player in the list": 0,
            "Step 3: If the player is an all-rounder and meets the given criteria for both runs and wickets, add them to the list": 0,
            "Step 4: Return the list containing all matching players": 0
        }
    }
}